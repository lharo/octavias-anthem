{"version":3,"sources":["components/ui/Table/TableStyles.js","components/ui/Rating/RatingComponent.js","components/ui/Table/CustomStyledRow.js","components/ui/Table/TableComponent.js","tests/dummyPlayList.js","components/dashboard/DashboardScreen.js","helpers/getStructuredDataByUserId.js","components/auth/LoginScreen.js","components/routers/AuthRouter.js","components/routers/AppRouter.js","OctaviaApp.js","index.js"],"names":["StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","table","minWidth","RatingComponent","rating","readOnly","name","React","useState","value","setValue","Box","component","mb","borderColor","Rating","precision","onChange","event","newValue","CustomStyledRow","item","align","order_number","artist","personal_ranking","global_ranking","TableComponent","columns","data","classes","TableContainer","Paper","Table","className","TableHead","map","column","TableBody","row","dummyData","DashboardScreen","LoginScreen","AuthRouter","exact","path","to","AppRouter","OctaviaApp","ReactDOM","render","document","getElementById"],"mappings":"gRAKaA,EAAkBC,aAAW,SAACC,GAAD,MAAY,CAClDC,KAAM,CACFC,gBAAiBF,EAAMG,QAAQC,OAAOC,MACtCC,MAAON,EAAMG,QAAQC,OAAOG,OAEhCC,KAAM,CACFC,SAAU,OANaV,CAQ3BW,KAESC,EAAiBZ,aAAW,SAACC,GAAD,MAAY,CACjDY,KAAM,CACF,qBAAsB,CAClBV,gBAAiBF,EAAMG,QAAQU,OAAOC,WAHpBf,CAM1BgB,KAESC,EAAYC,YAAW,CAChCC,MAAO,CACHC,SAAU,O,+BCpBLC,EAAkB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KAChD,EAA0BC,IAAMC,SAASJ,GAAzC,mBAAOK,EAAP,KAAcC,EAAd,KAEA,OACI,sCAESL,GACD,cAACM,EAAA,EAAD,CAAKC,UAAU,WAAWC,GAAI,EAAGC,YAAY,cAA7C,SACI,cAACC,EAAA,EAAD,CACIT,KAAI,uBAAqBA,GACzBG,MAAQA,EACRO,UAAY,GACZC,SAAU,SAACC,EAAOC,GAAR,OAAqBT,EAASS,QAMhDd,GACA,cAACM,EAAA,EAAD,CAAKC,UAAU,WAAWC,GAAI,EAAGC,YAAY,cAA7C,SACI,cAACC,EAAA,EAAD,CACIT,KAAK,YACLG,MAAQA,EACRO,UAAY,GACZX,UAAQ,UCzBnBe,EAAkB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC9B,OACI,mCACI,eAAC3B,EAAD,WACI,cAACb,EAAD,CACIyC,MAAM,SADV,SAESD,EAAKE,eAGd,cAAC1C,EAAD,CACIyC,MAAM,SADV,SAESD,EAAKf,OAGd,cAACzB,EAAD,CACIyC,MAAM,SADV,SAESD,EAAKG,SAGd,cAAC3C,EAAD,CACIyC,MAAM,SADV,SAEQ,cAAC,EAAD,CACIlB,OAAUiB,EAAKI,iBACfpB,UAAa,EACbC,KAASe,EAAKf,SAI1B,cAACzB,EAAD,CACIyC,MAAM,SADV,SAEQ,cAAC,EAAD,CACIlB,OAAUiB,EAAKK,eACfrB,UAAa,EACbC,KAASe,EAAKf,WA9BRe,EAAKf,SCM1BqB,EAAiB,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,KACjCC,EAAU/B,IAChB,OACI,cAACgC,EAAA,EAAD,CAAgBnB,UAAWoB,IAA3B,SACI,eAACC,EAAA,EAAD,CAAOC,UAAWJ,EAAQ7B,MAAO,aAAW,mBAA5C,UACI,cAACkC,EAAA,EAAD,UACI,cAACrC,EAAA,EAAD,UAGQ8B,EAAQQ,KAAK,SAAAC,GAAM,OACf,eAACxD,EAAD,CAEIyC,MAAM,SAFV,cAGQe,IAFGA,UAS3B,cAACC,EAAA,EAAD,UAEQT,EAAKO,KAAK,SAAAG,GAAG,OACT,cAAC,EAAD,CAEIlB,KAASkB,GADFA,EAAIjC,iBCrC9BkC,EAAY,CACrB,CACI,aAAgB,EAChB,KAAQ,wBACR,OAAU,SACV,iBAAoB,EACpB,eAAkB,KAEtB,CACI,aAAgB,EAChB,KAAQ,cACR,OAAU,SACV,iBAAoB,EACpB,eAAkB,KAEtB,CACI,aAAgB,EAChB,KAAQ,2BACR,OAAU,qBACV,iBAAoB,EACpB,eAAkB,MCfbC,EAAkB,WAE3B,IACMZ,ECLCW,EDOP,OACI,mCACI,cAAC,EAAD,CACIZ,QANI,CAAE,IAAK,OAAQ,SAAU,aAAc,kBAO3CC,KAAOA,OEZVa,EAAc,WACvB,OACI,8BACI,iDCACC,EAAa,WACtB,OACI,8BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAO,cAAcjC,UAAc8B,IAChD,cAAC,IAAD,CAAUI,GAAI,sBCLjBC,EAAY,WACrB,OACI,cAAC,IAAD,UACI,8BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOF,KAAO,QAAQjC,UAAc+B,IACpC,cAAC,IAAD,CAAOE,KAAO,IAAIjC,UAAc6B,EAAkBG,OAAK,IACvD,cAAC,IAAD,CAAUE,GAAI,cCTrBE,EAAa,WACtB,OACI,cAAC,EAAD,K,MCARC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fcfcc877.chunk.js","sourcesContent":["import TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nexport const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nexport const useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n});\r\n","import React from 'react'\r\n\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport const RatingComponent = ({ rating, readOnly, name }) => {\r\n    const [value, setValue] = React.useState(rating);\r\n    \r\n    return (\r\n        <>\r\n            {\r\n                !readOnly &&                 \r\n                <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n                    <Rating\r\n                        name= { `unique-rating${ name }` }\r\n                        value={ value }\r\n                        precision={ 0.5 }\r\n                        onChange={(event, newValue) => setValue(newValue)}\r\n                    />\r\n                </Box>\r\n            }\r\n\r\n            {\r\n                readOnly && \r\n                <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n                    <Rating \r\n                        name=\"read-only\" \r\n                        value={ value } \r\n                        precision={ 0.5 }\r\n                        readOnly \r\n                    />\r\n                </Box>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { RatingComponent } from '../Rating/RatingComponent'\r\nimport { StyledTableCell, StyledTableRow } from './TableStyles'\r\n\r\nexport const CustomStyledRow = ({ item }) => {\r\n    return (\r\n        <>\r\n            <StyledTableRow key={ item.name }>\r\n                <StyledTableCell \r\n                    align=\"center\"> \r\n                        {item.order_number} \r\n                </StyledTableCell>\r\n                \r\n                <StyledTableCell \r\n                    align=\"center\">\r\n                        {item.name}\r\n                </StyledTableCell>\r\n                \r\n                <StyledTableCell \r\n                    align=\"center\">\r\n                        {item.artist}\r\n                </StyledTableCell>\r\n\r\n                <StyledTableCell \r\n                    align=\"center\">\r\n                        <RatingComponent\r\n                            rating= { item.personal_ranking }\r\n                            readOnly = { false }\r\n                            name = { item.name }>\r\n                        </RatingComponent>\r\n                </StyledTableCell>\r\n\r\n                <StyledTableCell \r\n                    align=\"center\">\r\n                        <RatingComponent\r\n                            rating= { item.global_ranking }\r\n                            readOnly = { true }\r\n                            name = { item.name }>\r\n                        </RatingComponent>\r\n                </StyledTableCell>\r\n            </StyledTableRow>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { StyledTableCell, useStyles } from './TableStyles';\r\nimport { TableRow } from '@material-ui/core';\r\nimport { CustomStyledRow } from './CustomStyledRow';\r\n\r\n\r\nexport const TableComponent = ( { columns, data } ) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n                <TableHead>\r\n                    <TableRow> \r\n                        {\r\n                        \r\n                            columns.map( column => (\r\n                                <StyledTableCell \r\n                                    key= { column }\r\n                                    align=\"center\"\r\n                                    > { column }\r\n                                </StyledTableCell>\r\n                            ))\r\n                        }\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                    {\r\n                        data.map( row => (\r\n                            <CustomStyledRow \r\n                                key = {row.name }\r\n                                item = { row }>\r\n                            </CustomStyledRow>\r\n                        ))}\r\n                </TableBody>\r\n\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}\r\n","export const dummyData = [\r\n    {\r\n        \"order_number\": 1,\r\n        \"name\": \"Legend of the Unicron\",\r\n        \"artist\": \"Unkown\",\r\n        \"personal_ranking\": 2,\r\n        \"global_ranking\": 3.7\r\n    },\r\n    {\r\n        \"order_number\": 3,\r\n        \"name\": \"Winter Moon\",\r\n        \"artist\": \"Erutan\",\r\n        \"personal_ranking\": 3,\r\n        \"global_ranking\": 4.7\r\n    },\r\n    {\r\n        \"order_number\": 2,\r\n        \"name\": \"Las Luces de Esta Ciudad\",\r\n        \"artist\": \"Division Minuscula\",\r\n        \"personal_ranking\": 0,\r\n        \"global_ranking\": 4.2\r\n    }\r\n]","import React from 'react';\r\nimport { TableComponent } from '../ui/Table/TableComponent';\r\nimport { getStructuredDataByUserId } from '../../helpers/getStructuredDataByUserId';\r\n\r\n\r\nexport const DashboardScreen = () => {\r\n\r\n    const columns = [ '#', 'Name', 'Artist', 'My Ranking', 'Global Ranking']\r\n    const data = getStructuredDataByUserId( 1 );\r\n\r\n    return (\r\n        <>\r\n            <TableComponent\r\n                columns= { columns }\r\n                data={ data }\r\n            />\r\n        </>\r\n    );\r\n}\r\n","import { dummyData } from '../tests/dummyPlayList'\r\n\r\nexport const getStructuredDataByUserId = ( id ) => {\r\n    return dummyData;\r\n}","import React from 'react'\r\n\r\nexport const LoginScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>Login Screen</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { LoginScreen } from '../auth/LoginScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path = '/auth/login' component = { LoginScreen }/>\r\n                <Redirect to= '/auth/login' />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { DashboardScreen } from '../dashboard/DashboardScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\n\r\nexport const AppRouter = () => {\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <Route path = '/auth' component = { AuthRouter } />\r\n                    <Route path = '/' component = { DashboardScreen } exact />\r\n                    <Redirect to= '/' />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { AppRouter } from './components/routers/AppRouter'\r\n\r\nexport const OctaviaApp = () => {\r\n    return (\r\n        <AppRouter/>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { OctaviaApp } from './OctaviaApp';\r\nimport './styles/styles.scss'\r\n\r\nReactDOM.render(\r\n  <OctaviaApp />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}